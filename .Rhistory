colnames(df_cases_year) <- colnames(df_cases)
# turning everything into numeric
df_cases <- data.frame(lapply(df_cases, as.numeric))
df_pop <- data.frame(lapply(df_pop, as.numeric))
df_cases_year <- data.frame(lapply(df_cases_year, as.numeric))
# dividing to get age pattern
df_final <- df_cases
df_final <- df_final/df_pop
df_final <- df_final/df_cases_year
df_final['Ano'] <- seq(2007,2020,1)
df_final <- df_final %>% pivot_longer(!Ano, names_to = 'age_range', values_to = 'rate')
df_mean <- df_final %>% group_by(age_range) %>% summarise(rate = mean(rate))
df_mean <- df_mean %>% ungroup()
df_mean['Ano'] <- 'Mean'
df_mean <- df_mean %>% select(Ano, age_range, rate)
name_file <- paste0('age_patterns/mean_age_',paste0(str(mun),'.RData'))
#save(df_mean, file = name_file)
return(df_mean)
}
age_pattern <- function(mun){
df_cases <- df_cases %>% filter(ID_MN_RESI == mun)
df_pop <- df_pop %>% filter(Mun == mun)
df_cases <- df_cases %>% pivot_wider(names_from = age_range_new, values_from = n_cases)
df_cases <- df_cases %>% select(!c(ANO, ID_MN_RESI)) # matrix of cases
df_pop <- df_pop %>% select(!c(Ano, Mun)) # matrix of population
df_tmp <- data.frame(rowSums(df_cases))
df_cases_year <- data.frame(replicate(11, df_tmp$rowSums.df_cases.))
colnames(df_cases_year) <- colnames(df_cases)
# turning everything into numeric
df_cases <- data.frame(lapply(df_cases, as.numeric))
df_pop <- data.frame(lapply(df_pop, as.numeric))
df_cases_year <- data.frame(lapply(df_cases_year, as.numeric))
# dividing to get age pattern
df_final <- df_cases
df_final <- df_final/df_pop
df_final <- df_final/df_cases_year
df_final['Ano'] <- seq(2007,2020,1)
df_final <- df_final %>% pivot_longer(!Ano, names_to = 'age_range', values_to = 'rate')
name_file <- paste0('age_patterns/age_',paste0(str(mun),'.RData'))
#save(df_final, file = name_file)
return(df_final)
}
## The mean age pattern plot ##############################
df_mean <- mean_age_pattern(355030)
View(df_mean)
ggplot(df_mean, aes(x = age_range, y = rate)) + geom_line() + geom_point()
ggplot(df_mean, aes(x = age_range, y = rate)) + geom_line(group = 1) + geom_point(group = 1)
## The total age pattern plot ###########################################################################
df_final <- age_pattern(355030)
View(df_final)
ggplot(df_final, aes(x = age_range, y = rate, color = Ano, group = Ano)) + geom_line() + geom_point()
ggplot(df_final, aes(x = age_range, y = rate, color = factor(Ano), group = Ano)) + geom_line() + geom_point()
gc()
library(tidyverse)
library(ggplot2)
setwd('C:/Users/denis/Documents/dengue-age')
# Processamento anterior #############################################################################
## Functions to calculate age patterns ###################################################
mean_age_pattern <- function(mun){
df_cases <- df_cases %>% filter(ID_MN_RESI == mun)
df_pop <- df_pop %>% filter(Mun == mun)
df_cases <- df_cases %>% pivot_wider(names_from = age_range_new, values_from = n_cases)
df_cases <- df_cases %>% select(!c(ANO, ID_MN_RESI)) # matrix of cases
df_pop <- df_pop %>% select(!c(Ano, Mun)) # matrix of population
df_tmp <- data.frame(rowSums(df_cases))
df_cases_year <- data.frame(replicate(11, df_tmp$rowSums.df_cases.))
colnames(df_cases_year) <- colnames(df_cases)
# turning everything into numeric
df_cases <- data.frame(lapply(df_cases, as.numeric))
df_pop <- data.frame(lapply(df_pop, as.numeric))
df_cases_year <- data.frame(lapply(df_cases_year, as.numeric))
# dividing to get age pattern
df_final <- df_cases
df_final <- df_final/df_pop
df_final <- df_final/df_cases_year
df_final['Ano'] <- seq(2007,2020,1)
df_final <- df_final %>% pivot_longer(!Ano, names_to = 'age_range', values_to = 'rate')
df_mean <- df_final %>% group_by(age_range) %>% summarise(rate = mean(rate))
df_mean <- df_mean %>% ungroup()
df_mean['Ano'] <- 'Mean'
df_mean <- df_mean %>% select(Ano, age_range, rate)
name_file <- paste0('age_patterns/mean_age_',paste0(str(mun),'.RData'))
#save(df_mean, file = name_file)
return(df_mean)
}
age_pattern <- function(mun){
df_cases <- df_cases %>% filter(ID_MN_RESI == mun)
df_pop <- df_pop %>% filter(Mun == mun)
df_cases <- df_cases %>% pivot_wider(names_from = age_range_new, values_from = n_cases)
df_cases <- df_cases %>% select(!c(ANO, ID_MN_RESI)) # matrix of cases
df_pop <- df_pop %>% select(!c(Ano, Mun)) # matrix of population
df_tmp <- data.frame(rowSums(df_cases))
df_cases_year <- data.frame(replicate(11, df_tmp$rowSums.df_cases.))
colnames(df_cases_year) <- colnames(df_cases)
# turning everything into numeric
df_cases <- data.frame(lapply(df_cases, as.numeric))
df_pop <- data.frame(lapply(df_pop, as.numeric))
df_cases_year <- data.frame(lapply(df_cases_year, as.numeric))
# dividing to get age pattern
df_final <- df_cases
df_final <- df_final/df_pop
df_final <- df_final/df_cases_year
df_final['Ano'] <- seq(2007,2020,1)
df_final <- df_final %>% pivot_longer(!Ano, names_to = 'age_range', values_to = 'rate')
name_file <- paste0('age_patterns/age_',paste0(str(mun),'.RData'))
#save(df_final, file = name_file)
return(df_final)
}
## Loading data of age classes for municipality and year #################################
load('pop_muns.RData')
df_pop <- df
df_pop <- df_pop %>% filter(Ano <= 2020) %>% filter(Ano >= 2007)
rm(df)
## Loading data on age classes and cases by year #########################################
load('age_classes.RData')
df_cases <- df_cases %>% filter(ANO <= 2020) %>% filter(ANO >= 2007)
df_cases <- df_cases %>%
mutate(age_range_new = case_when(
NU_IDADE_N == '0.0' ~ '00 a 04',
age_range == '(19, 29]' ~ '20 a 29',
age_range == '(59, 69]' ~ '60 a 69',
age_range == '(9, 14]' ~ '10 a 14',
age_range == '(69, 79]' ~ '70 a 79',
age_range == '(39, 49]' ~ '40 a 49',
age_range == '(49, 59]' ~ '50 a 59',
age_range == '(0, 4]' ~ '00 a 04',
age_range == '(29, 39]' ~ '30 a 39',
age_range == '(4, 9]' ~ '05 a 09',
age_range == '(14, 19]' ~ '15 a 19',
age_range == '(79, 120]' ~ '80 e +'
)) %>% filter(!is.na(age_range_new))
df_cases <- df_cases %>% group_by(ANO, ID_MN_RESI, age_range_new) %>% summarise(n_cases = n())
df_cases <- df_cases %>% ungroup()
df_cases <- df_cases %>% complete(ANO, ID_MN_RESI, age_range_new)
df_cases[is.na(df_cases)] <- 0
# Calculating fit values for all municipalities #########################################
muns_list <- unique(df_cases$ID_MN_RESI)
df_mean <- mean_age_pattern(355030)
# Backup extra ###########################################################################################
df_fit <- df_mean
df_fit <- df_fit %>% select(age_range, rate)
df_fit <- df_fit %>% mutate(n = seq(1,11,1))
df_fit <- df_fit %>% select(n, rate)
df_fit
model <- nls(rate ~ a * (n/d)^(b-1) * (1-(n/d))^(c-1), data = df_fit, start = list(a = 1.0, b = 3.0, c = 4.0, d = 11))
summary(model)
coef(model)
a <- coef(model)
a <- data.frame(a)
gc()
library(tidyverse)
library(ggplot2)
setwd('C:/Users/denis/Documents/dengue-age')
# Processing from script 2 #############################################################################
## Functions to calculate age patterns ###################################################
mean_age_pattern <- function(mun){
df_cases <- df_cases %>% filter(ID_MN_RESI == mun)
df_pop <- df_pop %>% filter(Mun == mun)
df_cases <- df_cases %>% pivot_wider(names_from = age_range_new, values_from = n_cases)
df_cases <- df_cases %>% select(!c(ANO, ID_MN_RESI)) # matrix of cases
df_pop <- df_pop %>% select(!c(Ano, Mun)) # matrix of population
df_tmp <- data.frame(rowSums(df_cases))
df_cases_year <- data.frame(replicate(11, df_tmp$rowSums.df_cases.))
colnames(df_cases_year) <- colnames(df_cases)
# turning everything into numeric
df_cases <- data.frame(lapply(df_cases, as.numeric))
df_pop <- data.frame(lapply(df_pop, as.numeric))
df_cases_year <- data.frame(lapply(df_cases_year, as.numeric))
# dividing to get age pattern
df_final <- df_cases
df_final <- df_final/df_pop
df_final <- df_final/df_cases_year
df_final['Ano'] <- seq(2007,2020,1)
df_final <- df_final %>% pivot_longer(!Ano, names_to = 'age_range', values_to = 'rate')
df_mean <- df_final %>% group_by(age_range) %>% summarise(rate = mean(rate))
df_mean <- df_mean %>% ungroup()
df_mean['Ano'] <- 'Mean'
df_mean <- df_mean %>% select(Ano, age_range, rate)
name_file <- paste0('age_patterns/mean_age_',paste0(str(mun),'.RData'))
#save(df_mean, file = name_file)
return(df_mean)
}
age_pattern <- function(mun){
df_cases <- df_cases %>% filter(ID_MN_RESI == mun)
df_pop <- df_pop %>% filter(Mun == mun)
df_cases <- df_cases %>% pivot_wider(names_from = age_range_new, values_from = n_cases)
df_cases <- df_cases %>% select(!c(ANO, ID_MN_RESI)) # matrix of cases
df_pop <- df_pop %>% select(!c(Ano, Mun)) # matrix of population
df_tmp <- data.frame(rowSums(df_cases))
df_cases_year <- data.frame(replicate(11, df_tmp$rowSums.df_cases.))
colnames(df_cases_year) <- colnames(df_cases)
# turning everything into numeric
df_cases <- data.frame(lapply(df_cases, as.numeric))
df_pop <- data.frame(lapply(df_pop, as.numeric))
df_cases_year <- data.frame(lapply(df_cases_year, as.numeric))
# dividing to get age pattern
df_final <- df_cases
df_final <- df_final/df_pop
df_final <- df_final/df_cases_year
df_final['Ano'] <- seq(2007,2020,1)
df_final <- df_final %>% pivot_longer(!Ano, names_to = 'age_range', values_to = 'rate')
name_file <- paste0('age_patterns/age_',paste0(str(mun),'.RData'))
#save(df_final, file = name_file)
return(df_final)
}
## Loading data of age classes for municipality and year #################################
load('pop_muns.RData')
df_pop <- df
df_pop <- df_pop %>% filter(Ano <= 2020) %>% filter(Ano >= 2007)
rm(df)
## Loading data on age classes and cases by year #########################################
load('age_classes.RData')
df_cases <- df_cases %>% filter(ANO <= 2020) %>% filter(ANO >= 2007)
df_cases <- df_cases %>%
mutate(age_range_new = case_when(
NU_IDADE_N == '0.0' ~ '00 a 04',
age_range == '(19, 29]' ~ '20 a 29',
age_range == '(59, 69]' ~ '60 a 69',
age_range == '(9, 14]' ~ '10 a 14',
age_range == '(69, 79]' ~ '70 a 79',
age_range == '(39, 49]' ~ '40 a 49',
age_range == '(49, 59]' ~ '50 a 59',
age_range == '(0, 4]' ~ '00 a 04',
age_range == '(29, 39]' ~ '30 a 39',
age_range == '(4, 9]' ~ '05 a 09',
age_range == '(14, 19]' ~ '15 a 19',
age_range == '(79, 120]' ~ '80 e +'
)) %>% filter(!is.na(age_range_new))
df_cases <- df_cases %>% group_by(ANO, ID_MN_RESI, age_range_new) %>% summarise(n_cases = n())
df_cases <- df_cases %>% ungroup()
df_cases <- df_cases %>% complete(ANO, ID_MN_RESI, age_range_new)
df_cases[is.na(df_cases)] <- 0
# Calculating fit values for all municipalities #########################################
muns_list <- unique(df_cases$ID_MN_RESI) # 5265 municipalities
params <- data.frame()
cbind(a,a)
# Calculating fit values for all municipalities #########################################
muns_list <- unique(df_cases$ID_MN_RESI) # 5265 municipalities
muns_list <- muns_list[1:10]
params <- data.frame()
for(mun in muns_list){
df_fit <- mean_age_pattern(mun)
df_fit <- df_fit %>% select(age_range, rate)
df_fit <- df_fit %>% mutate(n = seq(1,11,1))
df_fit <- df_fit %>% select(n, rate)
model <- nls(rate ~ a * (n/d)^(b-1) * (1-(n/d))^(c-1),
data = df_fit,
start = list(a = 1.0, b = 3.0, c = 4.0, d = 11))
params_tmp <- data.frame(coef(model))
params_tmp['mun'] <- mun
params <- rbind(params, params_tmp)
}
# Calculating fit values for all municipalities #########################################
muns_list <- unique(df_cases$ID_MN_RESI) # 5265 municipalities
muns_list <- muns_list[1:10]
params <- data.frame()
for(mun in muns_list){
print(mun)
df_fit <- mean_age_pattern(mun)
df_fit <- df_fit %>% select(age_range, rate)
df_fit <- df_fit %>% mutate(n = seq(1,11,1))
df_fit <- df_fit %>% select(n, rate)
model <- nls(rate ~ a * (n/d)^(b-1) * (1-(n/d))^(c-1),
data = df_fit,
start = list(a = 1.0, b = 3.0, c = 4.0, d = 11))
params_tmp <- data.frame(coef(model))
params_tmp['mun'] <- mun
params <- rbind(params, params_tmp)
}
df_cases <- df_cases %>% filter(ID_MN_RESI == mun)
df_pop <- df_pop %>% filter(Mun == mun)
gc()
library(tidyverse)
library(ggplot2)
setwd('C:/Users/denis/Documents/dengue-age')
# Processing from script 2 #############################################################################
## Functions to calculate age patterns ###################################################
mean_age_pattern <- function(mun){
df_cases <- df_cases %>% filter(ID_MN_RESI == mun)
df_pop <- df_pop %>% filter(Mun == mun)
df_cases <- df_cases %>% pivot_wider(names_from = age_range_new, values_from = n_cases)
df_cases <- df_cases %>% select(!c(ANO, ID_MN_RESI)) # matrix of cases
df_pop <- df_pop %>% select(!c(Ano, Mun)) # matrix of population
df_tmp <- data.frame(rowSums(df_cases))
df_cases_year <- data.frame(replicate(11, df_tmp$rowSums.df_cases.))
colnames(df_cases_year) <- colnames(df_cases)
# turning everything into numeric
df_cases <- data.frame(lapply(df_cases, as.numeric))
df_pop <- data.frame(lapply(df_pop, as.numeric))
df_cases_year <- data.frame(lapply(df_cases_year, as.numeric))
# dividing to get age pattern
df_final <- df_cases
df_final <- df_final/df_pop
df_final <- df_final/df_cases_year
df_final['Ano'] <- seq(2007,2020,1)
df_final <- df_final %>% pivot_longer(!Ano, names_to = 'age_range', values_to = 'rate')
df_mean <- df_final %>% group_by(age_range) %>% summarise(rate = mean(rate))
df_mean <- df_mean %>% ungroup()
df_mean['Ano'] <- 'Mean'
df_mean <- df_mean %>% select(Ano, age_range, rate)
name_file <- paste0('age_patterns/mean_age_',paste0(str(mun),'.RData'))
#save(df_mean, file = name_file)
return(df_mean)
}
age_pattern <- function(mun){
df_cases <- df_cases %>% filter(ID_MN_RESI == mun)
df_pop <- df_pop %>% filter(Mun == mun)
df_cases <- df_cases %>% pivot_wider(names_from = age_range_new, values_from = n_cases)
df_cases <- df_cases %>% select(!c(ANO, ID_MN_RESI)) # matrix of cases
df_pop <- df_pop %>% select(!c(Ano, Mun)) # matrix of population
df_tmp <- data.frame(rowSums(df_cases))
df_cases_year <- data.frame(replicate(11, df_tmp$rowSums.df_cases.))
colnames(df_cases_year) <- colnames(df_cases)
# turning everything into numeric
df_cases <- data.frame(lapply(df_cases, as.numeric))
df_pop <- data.frame(lapply(df_pop, as.numeric))
df_cases_year <- data.frame(lapply(df_cases_year, as.numeric))
# dividing to get age pattern
df_final <- df_cases
df_final <- df_final/df_pop
df_final <- df_final/df_cases_year
df_final['Ano'] <- seq(2007,2020,1)
df_final <- df_final %>% pivot_longer(!Ano, names_to = 'age_range', values_to = 'rate')
name_file <- paste0('age_patterns/age_',paste0(str(mun),'.RData'))
#save(df_final, file = name_file)
return(df_final)
}
## Loading data of age classes for municipality and year #################################
load('pop_muns.RData')
df_pop <- df
df_pop <- df_pop %>% filter(Ano <= 2020) %>% filter(Ano >= 2007)
rm(df)
library(tidyverse)
library(ggplot2)
setwd('C:/Users/denis/Documents/dengue-age')
# Processing from script 2 #############################################################################
## Functions to calculate age patterns ###################################################
mean_age_pattern <- function(mun){
df_cases <- df_cases %>% filter(ID_MN_RESI == mun)
df_pop <- df_pop %>% filter(Mun == mun)
df_cases <- df_cases %>% pivot_wider(names_from = age_range_new, values_from = n_cases)
df_cases <- df_cases %>% select(!c(ANO, ID_MN_RESI)) # matrix of cases
df_pop <- df_pop %>% select(!c(Ano, Mun)) # matrix of population
df_tmp <- data.frame(rowSums(df_cases))
df_cases_year <- data.frame(replicate(11, df_tmp$rowSums.df_cases.))
colnames(df_cases_year) <- colnames(df_cases)
# turning everything into numeric
df_cases <- data.frame(lapply(df_cases, as.numeric))
df_pop <- data.frame(lapply(df_pop, as.numeric))
df_cases_year <- data.frame(lapply(df_cases_year, as.numeric))
# dividing to get age pattern
df_final <- df_cases
df_final <- df_final/df_pop
df_final <- df_final/df_cases_year
df_final['Ano'] <- seq(2007,2020,1)
df_final <- df_final %>% pivot_longer(!Ano, names_to = 'age_range', values_to = 'rate')
df_mean <- df_final %>% group_by(age_range) %>% summarise(rate = mean(rate))
df_mean <- df_mean %>% ungroup()
df_mean['Ano'] <- 'Mean'
df_mean <- df_mean %>% select(Ano, age_range, rate)
name_file <- paste0('age_patterns/mean_age_',paste0(str(mun),'.RData'))
#save(df_mean, file = name_file)
return(df_mean)
}
age_pattern <- function(mun){
df_cases <- df_cases %>% filter(ID_MN_RESI == mun)
df_pop <- df_pop %>% filter(Mun == mun)
df_cases <- df_cases %>% pivot_wider(names_from = age_range_new, values_from = n_cases)
df_cases <- df_cases %>% select(!c(ANO, ID_MN_RESI)) # matrix of cases
df_pop <- df_pop %>% select(!c(Ano, Mun)) # matrix of population
df_tmp <- data.frame(rowSums(df_cases))
df_cases_year <- data.frame(replicate(11, df_tmp$rowSums.df_cases.))
colnames(df_cases_year) <- colnames(df_cases)
# turning everything into numeric
df_cases <- data.frame(lapply(df_cases, as.numeric))
df_pop <- data.frame(lapply(df_pop, as.numeric))
df_cases_year <- data.frame(lapply(df_cases_year, as.numeric))
# dividing to get age pattern
df_final <- df_cases
df_final <- df_final/df_pop
df_final <- df_final/df_cases_year
df_final['Ano'] <- seq(2007,2020,1)
df_final <- df_final %>% pivot_longer(!Ano, names_to = 'age_range', values_to = 'rate')
name_file <- paste0('age_patterns/age_',paste0(str(mun),'.RData'))
#save(df_final, file = name_file)
return(df_final)
}
## Loading data of age classes for municipality and year #################################
load('pop_muns.RData')
df_pop <- df
df_pop <- df_pop %>% filter(Ano <= 2020) %>% filter(Ano >= 2007)
rm(df)
## Loading data on age classes and cases by year #########################################
load('age_classes.RData')
df_cases <- df_cases %>% filter(ANO <= 2020) %>% filter(ANO >= 2007)
df_cases <- df_cases %>%
mutate(age_range_new = case_when(
NU_IDADE_N == '0.0' ~ '00 a 04',
age_range == '(19, 29]' ~ '20 a 29',
age_range == '(59, 69]' ~ '60 a 69',
age_range == '(9, 14]' ~ '10 a 14',
age_range == '(69, 79]' ~ '70 a 79',
age_range == '(39, 49]' ~ '40 a 49',
age_range == '(49, 59]' ~ '50 a 59',
age_range == '(0, 4]' ~ '00 a 04',
age_range == '(29, 39]' ~ '30 a 39',
age_range == '(4, 9]' ~ '05 a 09',
age_range == '(14, 19]' ~ '15 a 19',
age_range == '(79, 120]' ~ '80 e +'
)) %>% filter(!is.na(age_range_new))
df_cases <- df_cases %>% group_by(ANO, ID_MN_RESI, age_range_new) %>% summarise(n_cases = n())
df_cases <- df_cases %>% ungroup()
df_cases <- df_cases %>% complete(ANO, ID_MN_RESI, age_range_new)
df_cases[is.na(df_cases)] <- 0
View(df_pop)
View(df_pop)
# Calculating fit values for all municipalities #########################################
muns_list <- unique(df_cases$ID_MN_RESI) # 5265 municipalities
muns_list <- muns_list[1:10]
params <- data.frame()
for(mun in muns_list){
if(mun %in% unique(df_pop$Mun)){
print(mun)
df_fit <- mean_age_pattern(mun)
df_fit <- df_fit %>% select(age_range, rate)
df_fit <- df_fit %>% mutate(n = seq(1,11,1))
df_fit <- df_fit %>% select(n, rate)
model <- nls(rate ~ a * (n/d)^(b-1) * (1-(n/d))^(c-1),
data = df_fit,
start = list(a = 1.0, b = 3.0, c = 4.0, d = 11))
params_tmp <- data.frame(coef(model))
params_tmp['mun'] <- mun
params <- rbind(params, params_tmp)
}
}
View(df_fit)
plot(df_fit$n, df_fit$rate)
# Calculating fit values for all municipalities #########################################
muns_list <- unique(df_cases$ID_MN_RESI) # 5265 municipalities
muns_list <- muns_list[1:10]
params <- data.frame()
for(mun in muns_list){
if(mun %in% unique(df_pop$Mun)){
print(mun)
df_fit <- mean_age_pattern(mun)
df_fit <- df_fit %>% select(age_range, rate)
df_fit <- df_fit %>% mutate(n = seq(1,11,1))
df_fit <- df_fit %>% select(n, rate)
model <- nls(rate ~ a * (n/d)^(b-1) * (1-(n/d))^(c-1),
data = df_fit,
start = list(a = 1e-6, b = 2.0, c = 2.0, d = 11))
params_tmp <- data.frame(coef(model))
params_tmp['mun'] <- mun
params <- rbind(params, params_tmp)
}
}
# Calculating fit values for all municipalities #########################################
muns_list <- unique(df_cases$ID_MN_RESI) # 5265 municipalities
muns_list <- muns_list[1:10]
params <- data.frame()
for(mun in muns_list){
if(mun %in% unique(df_pop$Mun)){
print(mun)
df_fit <- mean_age_pattern(mun)
df_fit <- df_fit %>% select(age_range, rate)
df_fit <- df_fit %>% mutate(n = seq(1,11,1))
df_fit <- df_fit %>% select(n, rate)
model <- nls(rate ~ a * (n/d)^(b-1) * (1-(n/d))^(c-1),
data = df_fit,
start = list(a = 1e-7, b = 2.0, c = 2.0, d = 11))
params_tmp <- data.frame(coef(model))
params_tmp['mun'] <- mun
params <- rbind(params, params_tmp)
}
}
# Calculating fit values for all municipalities #########################################
muns_list <- unique(df_cases$ID_MN_RESI) # 5265 municipalities
muns_list <- muns_list[1:10]
params <- data.frame()
for(mun in muns_list){
if(mun %in% unique(df_pop$Mun)){
print(mun)
df_fit <- mean_age_pattern(mun)
df_fit <- df_fit %>% select(age_range, rate)
df_fit <- df_fit %>% mutate(n = seq(1,11,1))
df_fit <- df_fit %>% select(n, rate)
model <- nls(rate ~ a * (n/d)^(b-1) * (1-(n/d))^(c-1),
data = df_fit,
start = list(a = max(df_fit$rate), b = 2.0, c = 2.0, d = 11))
params_tmp <- data.frame(coef(model))
params_tmp['mun'] <- mun
params <- rbind(params, params_tmp)
}
}
muns_list <- unique(df_cases$ID_MN_RESI) # 5265 municipalities
muns_list <- muns_list[1:10]
params <- data.frame()
for(mun in muns_list){
if(mun %in% unique(df_pop$Mun)){
print(mun)
df_fit <- mean_age_pattern(mun)
df_fit <- df_fit %>% select(age_range, rate)
df_fit <- df_fit %>% mutate(n = seq(1,11,1))
df_fit <- df_fit %>% select(n, rate)
model <- nls(rate ~ a * (n/d)^(b-1) * (1-(n/d))^(c-1),
data = df_fit,
start = list(a = max(df_fit$rate), b = 3.0, c = 2.0, d = 11))
params_tmp <- data.frame(coef(model))
params_tmp['mun'] <- mun
params <- rbind(params, params_tmp)
}
}
